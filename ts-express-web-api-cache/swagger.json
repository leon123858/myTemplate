{
	"swagger": "2.0",
	"info": {
		"description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
		"version": "1.0.0",
		"title": "Tasks API",
		"contact": {
			"email": "abc@gmail.com"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"schemes": ["http"],
	"host": "localhost:3000",
	"basePath": "/",
	"paths": {
		"/": {
			"get": {
				"summary": "進入首頁",
				"description": "進入首頁",
				"produces": ["text/html"],
				"parameters": [],
				"responses": {
					"200": {
						"description": "successful result, 首頁 html",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/html"
						}
					},
					"500": {
						"description": "Invalid, 500頁 html",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/html"
						}
					}
				}
			}
		},
		"/users": {
			"post": {
				"summary": "回音",
				"description": "回傳寄出 body",
				"produces": ["application/json"],
				"consumes": ["application/json"],
				"tags": ["Ajax"],
				"parameters": [
					{
						"name": "anything",
						"in": "body",
						"description": "any parameters, and should be string",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"example": ["this", "string", "should", "be", "return"]
						}
					}
				],
				"responses": {
					"200": {
						"description": "任意數量 string",
						"schema": {
							"type": "object",
							"properties": {
								"anything": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": ["this", "string", "should", "be", "return"]
								}
							}
						}
					}
				}
			}
		},
		"/documents/path": {
			"get": {
				"summary": "get document structure for this server",
				"description": "get document structure for this server",
				"produces": ["application/json"],
				"parameters": [],
				"responses": {
					"200": {
						"description": "server 提供 documents 的檔案架構和各檔案位置",
						"schema": {
							"type": "object",
							"example": {
								"introduce.md": "./documents/introduce.md",
								"test": {
									"introduce.md": "./documents/test/introduce.md",
									"test copy": {
										"copy": {
											"copy.md": "./documents/test/test copy/copy/copy.md"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/documents": {
			"get": {
				"summary": "get document for this server",
				"description": "get document for this server, ex: path=`./documents/introduce.md`, path can get from router `/documents/path`",
				"consumes": ["plain/text"],
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "path",
						"in": "query",
						"description": "document in the path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "指定的 markdown html (which document want to read)",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/html"
						}
					},
					"403": {
						"description": "不在許可中的地址",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/html"
						}
					},
					"404": {
						"description": "伺服器檔案讀取錯誤",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/html"
						}
					}
				}
			}
		},
		"/todos": {
			"get": {
				"summary": "Get all the tasks",
				"description": "Get all the tasks",
				"produces": ["application/json"],
				"parameters": [],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/todosResponse"
							}
						}
					},
					"400": {
						"description": "Invalid status value",
						"schema": {
							"$ref": "#/definitions/InvalidResponse"
						}
					}
				}
			}
		},
		"/todo": {
			"post": {
				"summary": "Save the task",
				"description": "Save the task",
				"produces": ["application/json"],
				"consumes": ["application/json"],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "task object",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"task": {
									"type": "object",
									"$ref": "#/definitions/Task"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/todosResponse"
							}
						}
					},
					"400": {
						"description": "Invalid status value",
						"schema": {
							"$ref": "#/definitions/InvalidResponse"
						}
					}
				}
			}
		},
		"/todos/{id}": {
			"put": {
				"summary": "Update the tasks",
				"description": "Update the tasks",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "task id that needs to be deleted",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"description": "task object",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"task": {
									"type": "object",
									"$ref": "#/definitions/Task"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/todosResponse"
							}
						}
					},
					"400": {
						"description": "Invalid status value",
						"schema": {
							"$ref": "#/definitions/InvalidResponse"
						}
					}
				}
			}
		},
		"/todo/{id}": {
			"delete": {
				"summary": "Delete the task",
				"description": "Delete the task",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "task id that needs to be deleted",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/todosResponse"
							}
						}
					},
					"400": {
						"description": "Invalid status value",
						"schema": {
							"$ref": "#/definitions/InvalidResponse"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"todosResponse": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"task": {
					"type": "string"
				},
				"assignee": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			}
		},
		"Task": {
			"type": "object",
			"properties": {
				"task": {
					"type": "string"
				},
				"assignee": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			}
		},
		"InvalidResponse": {
			"type": "object",
			"properties": {
				"statusCode": {
					"type": "string"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"anyThing": {
			"type": "object",
			"properties": {
				"anything": {
					"type": "string"
				}
			}
		},
		"html": {
			"type": "string",
			"example": "<html>html code</html>"
		}
	}
}
